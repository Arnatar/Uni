------------- 1. -------------
1.
Batch Queuing bezeichnet das Job-Scheduling auf einem HPC, also das Verteilen der Ressourcen (respektive Kerne) auf die Jobs, welche zur Abarbeitung in einer Queue stehen.

2.
Platform LSF, IBM Tivoli Workload Scheduler, SLURM

3.
check

4.
SLURM

5.
squeue

6.
-dynamisches update der queue
-Visualisierung => schneller zu lesen
(-YEAH, KLICKIBUNTI)

7. 
scancel (Konsole)
quickmenu -> cancel (sview)

8.
Ja, sofern sie alle die -s (share) Flag an srun übergeben. (untested, aber man-page behauptet das).
Diese Funktion ist allerdings auf dem Cluster deaktiviert.

9.
scontrol show job id -d (Konsole)
quickmenu -> full info

10.
möglich: backfill, wiki, wiki2, hold, builtin
verwendet: backfill

11.
salloc -p magny -N 1
srun hostname
exit

12.
Timeout ist 6h.

13.
infos: siehe detailierter Status 
scontrol update JobID=4223 Priority=7
Alternativ per sview
nur wenn der Parameter -nice gesetzt ist.

14.
Partitions: abu, cluster, compute, magny
srun -p || sbatch -p

------------- 2. -------------
Aufgefallen:
-Die Nodes Antworten nicht "gebündelt", es treten Vermischungen auf in der out-Datei auf (bspw erst 3 cores von west2, dann 2 von west3, dann nochmal einer von west2 usw...). Es sind auch oft die selben nodes, die früher schreiben.
-Die verschiedenen Nodes (und teilweise Cores) haben unterschiedlich schnelle Antwortzeiten (minimal).

Erklärung:
- 100 kleine Dinge, welche sich aufsummieren, wie Nodes und Cores haben nicht identisch lange Leitungen, der momentane State muss nicht identisch sein, kurz sie sind keine hundertprozentigen Kopien voneinander. Daraus folgen kleine Overheads, welche wir hier beobachten.
- Ähnlicher Grund wie zuvor, der Overhead durch unterschiedlch lange physikalische Leitungen sorgt hierfür.

Erzeugung von timescript.out in job_script:
Sollte ebensogut möglich sein wie gelassen werden, da bei der folgenden Nebenläufigkeit Dateiverlust droht (es sei denn man hat eine Node-übergreifende Lösung des Reader-Writer-Problems, davon wissen wir aber nichts).
Der Befehl sollte: echo $host: $time >> .*/path/.*/timscript.out lauten
